{
  "version": 4,
  "terraform_version": "1.7.5",
  "serial": 92,
  "lineage": "f733c893-9a7d-c01b-2a71-b5d676a6cfb2",
  "outputs": {
    "argocd_initial_password": {
      "value": "epT2W7VmQ6ES6Bwy",
      "type": "string",
      "sensitive": true
    },
    "grafana_admin_password": {
      "value": "FWAOXqYtM2SrfFW3",
      "type": "string",
      "sensitive": true
    },
    "grafana_url": {
      "value": "http://grafana.example.com",
      "type": "string"
    },
    "prometheus_url": {
      "value": "http://prometheus.example.com",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "kubernetes_secret",
      "name": "argocd_initial_password",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "password": "epT2W7VmQ6ES6Bwy"
            },
            "id": "argocd/argocd-initial-admin-secret",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "argocd-initial-admin-secret",
                "namespace": "argocd",
                "resource_version": "767",
                "uid": "06c030b3-9896-4372-9e5d-afd14abcaa28"
              }
            ],
            "type": "Opaque"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.12.4",
                "chart": "argo-cd",
                "first_deployed": 1728034223,
                "last_deployed": 1728034223,
                "name": "argocd",
                "namespace": "argocd",
                "notes": "In order to access the server UI you have the following options:\n\n1. kubectl port-forward service/argocd-server -n argocd 8080:443\n\n    and then open the browser on http://localhost:8080 and accept the certificate\n\n2. enable ingress in the values file `server.ingress.enabled` and either\n      - Add the annotation for ssl passthrough: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough\n      - Set the `configs.params.\"server.insecure\"` in the values file and terminate SSL at your ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-multiple-ingress-objects-and-hosts\n\n\nAfter reaching the UI the first time you can login with username: admin and the random password generated during the installation. You can find the password by running:\n\nkubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n\n(You should delete the initial secret afterwards as suggested by the Getting Started Guide: https://argo-cd.readthedocs.io/en/stable/getting_started/#4-login-using-the-cli)\n",
                "revision": 1,
                "values": "{\"configs\":{\"params\":{\"server.insecure\":true}},\"crds\":{\"install\":true},\"server\":{\"ingress\":{\"enabled\":true,\"hosts\":[\"argocd.example.com\"],\"ingressClassName\":\"nginx\",\"pathType\":\"Prefix\",\"paths\":[\"/\"]}}}",
                "version": "7.6.8"
              }
            ],
            "name": "argocd",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "crds.install",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "server:\r\n  ingress:\r\n    enabled: true\r\n    hosts:\r\n      - argocd.example.com\r\n    paths:\r\n      - /\r\n    pathType: Prefix\r\n    ingressClassName: nginx\r\nconfigs:\r\n  params:\r\n    server.insecure: true\r\n"
            ],
            "verify": false,
            "version": "7.6.8",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus_community_repo",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prometheus-community",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.77.1",
                "chart": "kube-prometheus-stack",
                "first_deployed": 1728034226,
                "last_deployed": 1728034226,
                "name": "prometheus-community",
                "namespace": "monitoring",
                "notes": "1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace monitoring prometheus-community-grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:\n\n   prometheus-community-grafana.monitoring.svc.cluster.local\n\n   If you bind grafana to 80, please update values in values.yaml and reinstall:\n   ```\n   securityContext:\n     runAsUser: 0\n     runAsGroup: 0\n     fsGroup: 0\n\n   command:\n   - \"setcap\"\n   - \"'cap_net_bind_service=+ep'\"\n   - \"/usr/sbin/grafana-server \u0026\u0026\"\n   - \"sh\"\n   - \"/run.sh\"\n   ```\n   Details refer to https://grafana.com/docs/installation/configuration/#http-port.\n   Or grafana would always crash.\n\n   From outside the cluster, the server URL(s) are:\n     http://grafana.example.com\n\n3. Login with the password from step 1 and the username: admin\n#################################################################################\n######   WARNING: Persistence is disabled!!! You will lose your data when   #####\n######            the Grafana pod is terminated.                            #####\n#################################################################################\n\n1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace monitoring -l \"app.kubernetes.io/name=prometheus-node-exporter,app.kubernetes.io/instance=prometheus-community\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9100 to use your application\"\n  kubectl port-forward --namespace monitoring $POD_NAME 9100\nkube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\nThe exposed metrics can be found here:\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics\n\nThe metrics are exported on the HTTP endpoint /metrics on the listening port.\nIn your case, prometheus-community-kube-state-metrics.monitoring.svc.cluster.local:8080/metrics\n\nThey are served either as plaintext or protobuf depending on the Accept header.\nThey are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.\n\nkube-prometheus-stack has been installed. Check its status by running:\n  kubectl --namespace monitoring get pods -l \"release=prometheus-community\"\n\nVisit https://github.com/prometheus-operator/kube-prometheus for instructions on how to create \u0026 configure Alertmanager and Prometheus instances using the Operator.\n",
                "revision": 1,
                "values": "{\"grafana\":{\"adminPassword\":\"FWAOXqYtM2SrfFW3\",\"enabled\":true,\"ingress\":{\"enabled\":true,\"hosts\":[\"grafana.example.com\"],\"ingressClassName\":\"nginx\",\"paths\":[\"/\"]}},\"prometheus\":{\"enabled\":true,\"ingress\":{\"enabled\":true,\"hosts\":[\"prometheus.example.com\"],\"ingressClassName\":\"nginx\",\"paths\":[\"/\"]}}}",
                "version": "65.0.0"
              }
            ],
            "name": "prometheus-community",
            "namespace": "monitoring",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "grafana:\r\n  enabled: true\r\n  ingress:\r\n    enabled: true\r\n    ingressClassName: nginx\r\n    hosts:\r\n      - grafana.example.com\r\n    paths:\r\n      - /\r\n  adminPassword: FWAOXqYtM2SrfFW3\r\nprometheus:\r\n  enabled: true\r\n  ingress:\r\n    enabled: true\r\n    ingressClassName: nginx\r\n    hosts:\r\n      - prometheus.example.com\r\n    paths:\r\n      - /\r\n"
            ],
            "verify": false,
            "version": "65.0.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "values"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.monitoring",
            "random_password.grafana_password"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "monitoring",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "monitoring",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "monitoring",
                "resource_version": "476",
                "uid": "bcf43c41-6017-44a8-bc68-18f8c137dfc1"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_password",
      "name": "grafana_password",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$iyaQAOX5bPN0iTCeBB/0ieIftc4pggpYxhanStd1ohuWcIU4psQeG",
            "id": "none",
            "keepers": null,
            "length": 16,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "FWAOXqYtM2SrfFW3",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "terraform_data",
      "name": "minikube_addons",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "b5e04cde-fdae-ea26-2cc2-f73474a13fee",
            "input": null,
            "output": null,
            "triggers_replace": {
              "value": [
                "b375ab7dca2ba079330d617a32b65bd948820e01cbaed1b279a0f4ddd39dea5c"
              ],
              "type": [
                "tuple",
                [
                  "string"
                ]
              ]
            }
          },
          "sensitive_attributes": []
        }
      ]
    }
  ],
  "check_results": null
}
